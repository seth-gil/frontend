{"version":3,"sources":["components/Navigator.js","components/ImageInput.js","API.js","pages/NewProject.js","pages/Home.js","components/GridBox.js","pages/Projects.js","pages/Project.js","App.js","serviceWorker.js","index.js"],"names":["Navigator","state","active","handleSelect","k","_this","setState","console","log","_this2","this","react_default","a","createElement","Navbar_default","style","zIndex","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav_default","className","onSelect","Item","lib","exact","to","Link","title","React","Component","ImageInput","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","input","createRef","displayText","event","text","files","target","length","concat","name","Form_default","Group","ref","type","multiple","accept","onChange","getDisplayText","props","ROOT","NewProject","setFrames","frames","description","framerate","redirect","pendingSubmit","canvas","context","readers","Array","images","document","getContext","width","height","i","file","index","FileReader","onloadend","src","result","$","on","clearRect","drawImage","time","lastModified","frame","toDataURL","readAsDataURL","shrinkImages","preventDefault","sort","b","map","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","then","res","catch","err","_this3","react_router","onSubmit","handleSubmit","bind","Label","Control","value","placeholder","as","rows","Row","Col_default","sm","ImageInput_ImageInput","handleFileSelect","sel","options","selectedIndex","Button_default","Home","modalShow","textAlign","position","left","top","transform","variant","onClick","handleShow","Modal_default","show","onHide","handleClose","Header","closeButton","Title","Body","NewProject_NewProject","GridBox","Card_default","Img","thumbnail","Text","Projects","loading","ajax","url","CardColumns_default","project","objectSpread","key","Project","match","params","loaded","data","getJSON","done","_id","$oid","fail","error","Container_default","maxWidth","marginTop","controls","App","Navigator_Navigator","path","component","Boolean","window","location","hostname","ReactDOM","render","react_router_dom","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d456a74.chunk.js","sourcesContent":["import React from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport {LinkContainer} from \"react-router-bootstrap\";\n//import {Link} from \"react-router-dom\";\n\nexport default class Navigator extends React.Component {\n    state = {\n        active: 1\n    };\n\n    handleSelect = (k) => {\n        this.setState({active: k});\n        console.log(k, this.state.active);\n    }\n\n    render() {\n        return (\n            <Navbar style={{zIndex: 10}} bg=\"light\" expand=\"lg\">\n                <Navbar.Brand>Animatrix</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"justify-content-center\" onSelect={k => this.handleSelect(k)}>\n                        <Nav.Item>\n                            <LinkContainer exact to=\"/\">\n                                <Nav.Link>\n                                    Home \n                                </Nav.Link>\n                            </LinkContainer>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <LinkContainer to=\"/new/\">\n                                <Nav.Link>\n                                    New\n                                </Nav.Link>\n                            </LinkContainer>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <LinkContainer to=\"/projects/\">\n                                <Nav.Link title=\"Projects\">\n                                    Projects\n                                </Nav.Link>\n                            </LinkContainer>\n                        </Nav.Item>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\n\nexport default class ImageInput extends React.Component {\n    constructor() {\n        super();\n        this.input = React.createRef();\n\n        this.state = {\n            displayText: \"No images chosen\"\n        }\n    }\n\n    getDisplayText(event) {\n        let files = event.target.files, text;\n\n        if(files.length) \n            text = (files.length > 1) ? `${files.length} images` : files[0].name;\n        else \n            text = \"No images chosen\";\n\n        this.setState({displayText: text});\n    }\n\n    render() {\n        return (     \n            <Form.Group>\n                <div className=\"custom-file\">\n                  <input\n                    ref={this.input}\n                    className=\"custom-file-input\"\n                    type=\"file\" \n                    name=\"request\" \n                    multiple \n                    accept=\"image/*\" \n                    onChange={(event) => {this.getDisplayText(event); this.props.onChange(event)}} \n                    />\n                  <label className=\"custom-file-label\">\n                    {this.state.displayText}\n                  </label>\n                </div>\n            </Form.Group>\n        );\n    }\n}","export const ROOT = \"http://ec2-54-205-66-183.compute-1.amazonaws.com:5000\";","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport $ from \"jquery\";\nimport Col from \"react-bootstrap/Col\";\nimport ImageInput from \"../components/ImageInput\";\nimport { Redirect } from 'react-router';\nimport { ROOT } from \"../API\";\n\nexport default class NewProject extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: \"default\",\n            description: \"default\",\n            files: \"default\",\n            framerate: \"default\",\n            frames: [],\n            redirect: null,\n            pendingSubmit: false\n        }\n    }\n\n    setFrames = (frames) => {\n        this.setState({frames: frames});\n    }\n\n    shrinkImages(files) {\n        let readers = Array(files.length), frames = Array(files.length), images = Array(files.length), canvas, context, _this = this;\n    \n        canvas = document.createElement('canvas');\n        context = canvas.getContext('2d');\n        canvas.width = 600;\n        canvas.height = 450;\n        \n        for (var i = 0; i < files.length; i++) {        \n            (function(file, index) {\n                readers[index] = new FileReader(); // init a file reader\n    \n                readers[index].onloadend = function() {\n                    // shrink image\n                    images[index] = document.createElement('img');\n                    images[index].src = this.result;\n                    \n                    $(images[index]).on(\"load\", function() {\n                        context.clearRect(0, 0, canvas.width, canvas.height);\n                        context.drawImage(this, 0, 0, 600, 450);\n                        frames[index] = {time: file.lastModified, frame: canvas.toDataURL('image/jpeg', 0.50)};\n                        _this.setFrames(frames);\n                    });\n                };\n    \n                readers[index].readAsDataURL(file); \n            })(files[i], i);\n        }\n    }\n\n    handleFileSelect(event) {\n        this.setState({files: event.target.files, frames: Array(event.target.files.length)})\n        this.shrinkImages(event.target.files);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        this.setState({pendingSubmit: true});\n    }\n\n    componentDidUpdate() {\n        if((this.state.files.length == this.state.frames.length) && this.state.pendingSubmit) {\n            let _this = this,\n                frames = this.state.frames;\n\n            // frames = frames.map(frame => {\n            //     return frame.substr(23);\n            // })\n\n            frames = frames.sort((a, b) => {\n                // Sort\n                if (a.time > b.time) return 1;\n                if (b.time > a.time) return -1;\n            }).map(frame => {\n                // Remove time key\n                return frame.frame;\n            });\n\n            console.log(frames);\n\n            \n            \n            fetch(ROOT + \"/api/v1/project\", {\n                method: \"POST\",\n                //body: formData\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: this.state.name,\n                    description: this.state.description,\n                    framerate: this.state.framerate,\n                    frames: this.state.frames\n                })\t\n            }).then(res => {\n                res.text().then(function (id) {\n                    console.log(id);\n                    _this.setState({redirect: `/project/${id}`})\n                });\n            }).catch(err => {\n                console.log(\"Error\", err);\n            });\n        }\n     }\n\n    render() {\n        //console.log(this.state.frames);\n        return (\n            <section>\n                {/* {\n                    this.state.frames.map((frame, index) => {\n                        return (\n                            <section key={index+200}>\n                                <p key={index+100}>\n                                    {index}\n                                </p>\n                                <img key={index} src={frame} />\n                            </section>\n                        );\n                    })\n                } */}\n                {\n                    !this.state.redirect ? (\n                        !this.state.pendingSubmit ? (\n                            <Form onSubmit={this.handleSubmit.bind(this)}>\n                                <Form.Group>\n                                    <Form.Label>\n                                        What do you want to call your new project?\n                                    </Form.Label>\n                                    <Form.Control onChange={event => this.setState({name: event.target.value})} type=\"text\" placeholder=\"Enter project name\"/>\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>\n                                        Describe your new project\n                                    </Form.Label>\n                                    <Form.Control onChange={event => this.setState({description: event.target.value})} as=\"textarea\" rows=\"3\" placeholder=\"Enter project description\"/>\n                                </Form.Group>\n                                <Form.Row>\n                                    <Col sm>\n                                        <Form.Group>\n                                            <Form.Label>Choose images</Form.Label>\n                                            <ImageInput onChange={this.handleFileSelect.bind(this)} />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm>\n                                        <Form.Group>\n                                            <Form.Label>Choose framerate (fps)</Form.Label>\n                                            <Form.Control as=\"select\" onChange={event => {let sel = event.target; this.setState({framerate: sel.options[sel.selectedIndex].value})}}>\n                                                <option value=\"15\">-- Please select --</option> {/* defaults to 15 */}\n                                                <option value=\"1\">1</option>\n                                                <option value=\"15\">15</option>\n                                                <option value=\"20\">20</option>\n                                                <option value=\"25\">25</option>\n                                                <option value=\"30\">30</option>\n                                            </Form.Control>\n                                        </Form.Group>\n                                    </Col>\n                                </Form.Row>\n                                <Form.Group>\n                                    <Button type=\"submit\">\n                                        Create\n                                    </Button>\n                                </Form.Group>\n                            </Form>\n                        ) : (\n                            <p>Submitting data...</p>\n                        )\n                    ) :\n                    (\n                        <Redirect to={this.state.redirect} />\n                    )\n                }\n            </section>\n            \n        )\n    }\n}","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport NewProject from \"./NewProject\";\n\nexport default class Home extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            modalShow: false\n        }\n    }\n\n    handleShow() {\n        this.setState({modalShow: true});\n    }\n\n    handleClose() {\n        this.setState({modalShow: false});\n    }\n\n    render() {\n        return (\n            <main>\n                <section style={{\n                    textAlign: \"center\",\n                    position: \"absolute\",\n                    left: \"50%\", top: \"50%\",\n                    transform: \"translate(-50%, -50%)\",\n                    width: \"100%\"\n                    }}>\n                    <h1>Welcome to Animatrix!</h1>\n                    <h4>The free online stop-motion animation software.</h4><br/>\n                    <Button variant=\"secondary\" onClick={this.handleShow.bind(this)}>Get started</Button>\n                </section>\n\n                <Modal show={this.state.modalShow} onHide={this.handleClose.bind(this)}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Let's get started!</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <NewProject />\n                    </Modal.Body>\n                </Modal>\n            </main>\n        )\n    } \n}","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function GridBox(props) {\n    return (\n        <Card>\n            <Card.Img variant=\"top\" src={props.thumbnail} />\n            <Card.Body>\n                <Card.Title>{props.name}</Card.Title>\n                <Card.Text>\n                    {props.description}\n                </Card.Text>\n                <Button variant=\"secondary\">Go to project</Button>\n            </Card.Body>\n        </Card>\n    );\n}","import React from \"react\";\nimport $ from \"jquery\";\nimport GridBox from \"../components/GridBox\";\nimport CardColumns from \"react-bootstrap/CardColumns\";\n\nexport default class Projects extends React.Component {\n    state = {\n        loading: true\n    }\n\n    componentDidMount() {\n        $.ajax({\n            url: \"\"\n        })\n    }\n\n    render() {\n        const projects = [\n            {\n                id: 12393,\n                name: \"My First Lego Movie\",\n                thumbnail: \"https://www.wctrib.com/sites/default/files/styles/16x9_620/public/fieldimages/0122/lego-96923822-1a72-11e9-8813-cb9dec761e73_0.jpg?itok=S18NDKeo\",\n                description: \"A mildly boring film about some lego figures\"\n            },\n            {\n                id: 34923,\n                name: \"Another Project\",\n                thumbnail: \"https://localtvwjw.files.wordpress.com/2018/11/31224231718_152a54689b_z.jpg?quality=85&strip=all&w=640\",\n                description: \"Much of the same daft content. Surprisingly charming formality.\"\n            }\n        ];\n\n        return (\n            <main>\n                <CardColumns>\n                    {\n                        projects.map((project, index) => {\n                            return React.createElement(\n                                GridBox, {...project, key: index}, null\n                            )\n                        })\n                    }\n                </CardColumns>\n            </main>\n        )\n    } \n}  ","import React from \"react\";\nimport $ from \"jquery\";\nimport Container from \"react-bootstrap/Container\";\nimport { ROOT } from \"../API\";\n\nexport default class Project extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: props.match.params.id,\n            loaded: false,\n            data: null\n        }\n    }\n\n    componentDidMount() {\n        $.getJSON(`${ROOT}/api/v1/project/${this.state.id}`)\n        .done((data) => {\n            console.log(data);\n            data.id = data._id.$oid;\n\n            this.setState({data, loaded: true});\n        })\n        .fail((err) => {\n            console.error(err);\n        });\n    }\n\n    render() {\n        console.log(this.state.data);\n        return (\n            <Container style={{maxWidth: \"600px\"}}>\n                \n                {\n                    this.state.loaded ? (\n                        <section>\n                            <section>\n                                <h1>{this.state.data.name}</h1>\n                                <p>\n                                    {this.state.data.description}\n                                </p>\n                                <hr/>\n                                <br/>\n                            </section>\n                            <section style={{marginTop: \"10px\"}}>\n                                <p>Preview:</p>\n                                <video style={{width: \"100%\"}} controls className=\"embed-responsive-item\">\n                                    <source src={`${ROOT}/${this.state.id}/preview.mp4`} type=\"video/mp4\" />\n                                </video>\n                            </section>\n                        </section>\n                    ) : (\n                        <p>Loading project data...</p>\n                    )\n                }\n            </Container>\n        );\n    }\n}","import React from 'react';\nimport {Route} from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Navigator from \"./components/Navigator\";\nimport Home from \"./pages/Home\";\nimport Projects from \"./pages/Projects\";\nimport Project from \"./pages/Project\";\nimport NewProject from './pages/NewProject';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigator />\n        <Container style={{marginTop: \"15px\"}}>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/projects/\" component={Projects} />\n          <Route path=\"/project/:id/\" component={Project} />\n          <Route path=\"/new/\" component={NewProject} />\n        </Container>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}